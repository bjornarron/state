geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Total hours per day for each operating system", x = "Operating System", y = "Total Hours") +
theme(legend.position = "none")
# Bar plot of preferred operating systems
preferred_os <- data %>%
group_by(PreferredOS) %>%
summarize(Count = n())
ggplot(preferred_os, aes(x = PreferredOS, y = Count, fill = PreferredOS)) +
geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Preferred Operating System", x = "Operating System", y = "Count") +
theme(legend.position = "none")
# Boxplot of ComputersInUse per line
ggplot(data, aes(x = Line, y = ComputersInUse, fill = Line)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Computers in use per line", x = "Line", y = "Computers in use") +
theme(legend.position = "none")
#Dirichlet
data_normalized <- data %>%
mutate(TotalHours = WindowsHours + LinuxHours + MacHours) %>%
mutate(NormWindows = WindowsHours / TotalHours,
NormLinux = LinuxHours / TotalHours,
NormMac = MacHours / TotalHours)
DR <- DirichReg(cbind(NormWindows, NormLinux, NormMac) ~ 1, data = data_normalized)
# Install necessary packages if not already installed
if (!require(readr)) install.packages("readr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(tidyr)) install.packages("tidyr")
if (!require(ggtern)) install.packages("ggtern")
if (!require(DirichletReg)) install.packages("DirichletReg")
if (!require(viridis)) install.packages("viridis")
# Load necessary libraries
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(ggtern)
library(DirichletReg)
library(viridis)
# Import the data as a dataframe
data <- read_delim("data.csv", delim = ",", locale = readr::locale(encoding = "UTF-8"))
# Rename columns
colnames(data) <- c("Timestamp", "Line", "WindowsHours", "LinuxHours", "MacHours", "PreferredOS", "ComputersInUse")
# Convert Timestamp column to a proper datetime format
data$Timestamp <- as.POSIXct(data$Timestamp, format = "%d.%m.%Y kl. %H.%M.%S")
# Convert hours columns to numeric format
data$WindowsHours <- as.numeric(data$WindowsHours)
data$LinuxHours <- as.numeric(data$LinuxHours)
data$MacHours <- as.numeric(data$MacHours)
# Convert ComputersInUse column to numeric format
data$ComputersInUse <- as.numeric(data$ComputersInUse)
# Histogram of total hours per day for each operating system
total_hours <- data %>%
gather(OperatingSystem, Hours, WindowsHours:MacHours) %>%
group_by(OperatingSystem) %>%
summarize(TotalHours = sum(Hours))
ggplot(total_hours, aes(x = OperatingSystem, y = TotalHours, fill = OperatingSystem)) +
geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Total hours per day for each operating system", x = "Operating System", y = "Total Hours") +
theme(legend.position = "none")
# Bar plot of preferred operating systems
preferred_os <- data %>%
group_by(PreferredOS) %>%
summarize(Count = n())
ggplot(preferred_os, aes(x = PreferredOS, y = Count, fill = PreferredOS)) +
geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Preferred Operating System", x = "Operating System", y = "Count") +
theme(legend.position = "none")
# Boxplot of ComputersInUse per line
ggplot(data, aes(x = Line, y = ComputersInUse, fill = Line)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Computers in use per line", x = "Line", y = "Computers in use") +
theme(legend.position = "none")
#Dirichlet
data_normalized <- data %>%
mutate(TotalHours = WindowsHours + LinuxHours + MacHours) %>%
mutate(NormWindows = WindowsHours / TotalHours,
NormLinux = LinuxHours / TotalHours,
NormMac = MacHours / TotalHours)
# Step 3: Calculate the Dirichlet distribution's parameters using the normalized data
response_matrix <- data_normalized %>%
select(NormWindows, NormLinux, NormMac) %>%
as.matrix()
DR <- DirichReg(y = response_matrix)
# Install necessary packages if not already installed
if (!require(readr)) install.packages("readr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(tidyr)) install.packages("tidyr")
if (!require(ggtern)) install.packages("ggtern")
if (!require(DirichletReg)) install.packages("DirichletReg")
if (!require(viridis)) install.packages("viridis")
# Load necessary libraries
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(ggtern)
library(DirichletReg)
library(viridis)
# Import the data as a dataframe
data <- read_delim("data.csv", delim = ",", locale = readr::locale(encoding = "UTF-8"))
# Rename columns
colnames(data) <- c("Timestamp", "Line", "WindowsHours", "LinuxHours", "MacHours", "PreferredOS", "ComputersInUse")
# Convert Timestamp column to a proper datetime format
data$Timestamp <- as.POSIXct(data$Timestamp, format = "%d.%m.%Y kl. %H.%M.%S")
# Convert hours columns to numeric format
data$WindowsHours <- as.numeric(data$WindowsHours)
data$LinuxHours <- as.numeric(data$LinuxHours)
data$MacHours <- as.numeric(data$MacHours)
# Convert ComputersInUse column to numeric format
data$ComputersInUse <- as.numeric(data$ComputersInUse)
# Histogram of total hours per day for each operating system
total_hours <- data %>%
gather(OperatingSystem, Hours, WindowsHours:MacHours) %>%
group_by(OperatingSystem) %>%
summarize(TotalHours = sum(Hours))
ggplot(total_hours, aes(x = OperatingSystem, y = TotalHours, fill = OperatingSystem)) +
geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Total hours per day for each operating system", x = "Operating System", y = "Total Hours") +
theme(legend.position = "none")
# Bar plot of preferred operating systems
preferred_os <- data %>%
group_by(PreferredOS) %>%
summarize(Count = n())
ggplot(preferred_os, aes(x = PreferredOS, y = Count, fill = PreferredOS)) +
geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Preferred Operating System", x = "Operating System", y = "Count") +
theme(legend.position = "none")
# Boxplot of ComputersInUse per line
ggplot(data, aes(x = Line, y = ComputersInUse, fill = Line)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Computers in use per line", x = "Line", y = "Computers in use") +
theme(legend.position = "none")
#Dirichlet
data_normalized <- data %>%
mutate(TotalHours = WindowsHours + LinuxHours + MacHours) %>%
mutate(NormWindows = WindowsHours / TotalHours,
NormLinux = LinuxHours / TotalHours,
NormMac = MacHours / TotalHours)
# Step 3: Calculate the Dirichlet distribution's parameters using the normalized data
response_matrix <- data_normalized %>%
select(NormWindows, NormLinux, NormMac) %>%
as.matrix()
data_normalized$index <- 1:nrow(data_normalized)
DR <- DirichReg(cbind(NormWindows, NormLinux, NormMac) ~ 1, data = data_normalized, subset = index)
# Install necessary packages if not already installed
if (!require(readr)) install.packages("readr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(tidyr)) install.packages("tidyr")
if (!require(ggtern)) install.packages("ggtern")
if (!require(DirichletReg)) install.packages("DirichletReg")
if (!require(viridis)) install.packages("viridis")
# Load necessary libraries
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(ggtern)
library(DirichletReg)
library(viridis)
# Import the data as a dataframe
data <- read_delim("data.csv", delim = ",", locale = readr::locale(encoding = "UTF-8"))
# Rename columns
colnames(data) <- c("Timestamp", "Line", "WindowsHours", "LinuxHours", "MacHours", "PreferredOS", "ComputersInUse")
# Convert Timestamp column to a proper datetime format
data$Timestamp <- as.POSIXct(data$Timestamp, format = "%d.%m.%Y kl. %H.%M.%S")
# Convert hours columns to numeric format
data$WindowsHours <- as.numeric(data$WindowsHours)
data$LinuxHours <- as.numeric(data$LinuxHours)
data$MacHours <- as.numeric(data$MacHours)
# Convert ComputersInUse column to numeric format
data$ComputersInUse <- as.numeric(data$ComputersInUse)
# Histogram of total hours per day for each operating system
total_hours <- data %>%
gather(OperatingSystem, Hours, WindowsHours:MacHours) %>%
group_by(OperatingSystem) %>%
summarize(TotalHours = sum(Hours))
ggplot(total_hours, aes(x = OperatingSystem, y = TotalHours, fill = OperatingSystem)) +
geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Total hours per day for each operating system", x = "Operating System", y = "Total Hours") +
theme(legend.position = "none")
# Bar plot of preferred operating systems
preferred_os <- data %>%
group_by(PreferredOS) %>%
summarize(Count = n())
ggplot(preferred_os, aes(x = PreferredOS, y = Count, fill = PreferredOS)) +
geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Preferred Operating System", x = "Operating System", y = "Count") +
theme(legend.position = "none")
# Boxplot of ComputersInUse per line
ggplot(data, aes(x = Line, y = ComputersInUse, fill = Line)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Computers in use per line", x = "Line", y = "Computers in use") +
theme(legend.position = "none")
#Dirichlet
data_normalized <- data %>%
mutate(TotalHours = WindowsHours + LinuxHours + MacHours) %>%
mutate(NormWindows = WindowsHours / TotalHours,
NormLinux = LinuxHours / TotalHours,
NormMac = MacHours / TotalHours)
# Step 3: Calculate the Dirichlet distribution's parameters using the normalized data
response_matrix <- data_normalized %>%
select(NormWindows, NormLinux, NormMac) %>%
as.matrix()
dirichlet_data <- DirichletReg::DirichletRegData(y = response_matrix)
# Install necessary packages if not already installed
if (!require(readr)) install.packages("readr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(tidyr)) install.packages("tidyr")
if (!require(ggtern)) install.packages("ggtern")
if (!require(DirichletReg)) install.packages("DirichletReg")
if (!require(viridis)) install.packages("viridis")
if (!require(gtools)) install.packages("gtools")
# Load necessary libraries
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(ggtern)
library(DirichletReg)
library(viridis)
library(gtools)
# Import the data as a dataframe
data <- read_delim("data.csv", delim = ",", locale = readr::locale(encoding = "UTF-8"))
# Rename columns
colnames(data) <- c("Timestamp", "Line", "WindowsHours", "LinuxHours", "MacHours", "PreferredOS", "ComputersInUse")
# Convert Timestamp column to a proper datetime format
data$Timestamp <- as.POSIXct(data$Timestamp, format = "%d.%m.%Y kl. %H.%M.%S")
# Convert hours columns to numeric format
data$WindowsHours <- as.numeric(data$WindowsHours)
data$LinuxHours <- as.numeric(data$LinuxHours)
data$MacHours <- as.numeric(data$MacHours)
# Convert ComputersInUse column to numeric format
data$ComputersInUse <- as.numeric(data$ComputersInUse)
# Histogram of total hours per day for each operating system
total_hours <- data %>%
gather(OperatingSystem, Hours, WindowsHours:MacHours) %>%
group_by(OperatingSystem) %>%
summarize(TotalHours = sum(Hours))
ggplot(total_hours, aes(x = OperatingSystem, y = TotalHours, fill = OperatingSystem)) +
geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Total hours per day for each operating system", x = "Operating System", y = "Total Hours") +
theme(legend.position = "none")
# Bar plot of preferred operating systems
preferred_os <- data %>%
group_by(PreferredOS) %>%
summarize(Count = n())
ggplot(preferred_os, aes(x = PreferredOS, y = Count, fill = PreferredOS)) +
geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Preferred Operating System", x = "Operating System", y = "Count") +
theme(legend.position = "none")
# Boxplot of ComputersInUse per line
ggplot(data, aes(x = Line, y = ComputersInUse, fill = Line)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Computers in use per line", x = "Line", y = "Computers in use") +
theme(legend.position = "none")
#Dirichlet
data_normalized <- data %>%
mutate(TotalHours = WindowsHours + LinuxHours + MacHours) %>%
mutate(NormWindows = WindowsHours / TotalHours,
NormLinux = LinuxHours / TotalHours,
NormMac = MacHours / TotalHours)
alpha <- apply(data_normalized[, c("NormWindows", "NormLinux", "NormMac")], 2, mean) * 100
# Create a grid
grid_size <- 100
grid <- expand.grid(x = seq(0, 1, length.out = grid_size),
y = seq(0, 1, length.out = grid_size))
# Calculate the remaining probability for MacOS
grid$z <- 1 - grid$x - grid$y
# Remove invalid points
grid <- grid[grid$z >= 0, ]
# Calculate the probability density for the Dirichlet distribution
grid$probability <- apply(grid, 1, function(row) {
ddirichlet(x = as.numeric(row[1:3]), alpha = alpha)
})
ggplot(grid, aes(x = x, y = y, fill = probability)) +
geom_tile() +
scale_fill_viridis(option = "C", name = "Probability") +
coord_cartesian(xlim = c(0, 1), ylim = c(0, 1), expand = FALSE) +
labs(title = "Dirichlet Distribution of Time Allocation for Each OS",
x = "Windows", y = "Linux") +
theme_minimal()
# Install necessary packages if not already installed
if (!require(readr)) install.packages("readr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(tidyr)) install.packages("tidyr")
if (!require(ggtern)) install.packages("ggtern")
if (!require(DirichletReg)) install.packages("DirichletReg")
if (!require(viridis)) install.packages("viridis")
if (!require(gtools)) install.packages("gtools")
# Load necessary libraries
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(ggtern)
library(DirichletReg)
library(viridis)
library(gtools)
# Import the data as a dataframe
data <- read_delim("data.csv", delim = ",", locale = readr::locale(encoding = "UTF-8"))
# Rename columns
colnames(data) <- c("Timestamp", "Line", "WindowsHours", "LinuxHours", "MacHours", "PreferredOS", "ComputersInUse")
# Convert Timestamp column to a proper datetime format
data$Timestamp <- as.POSIXct(data$Timestamp, format = "%d.%m.%Y kl. %H.%M.%S")
# Convert hours columns to numeric format
data$WindowsHours <- as.numeric(data$WindowsHours)
data$LinuxHours <- as.numeric(data$LinuxHours)
data$MacHours <- as.numeric(data$MacHours)
# Convert ComputersInUse column to numeric format
data$ComputersInUse <- as.numeric(data$ComputersInUse)
# Histogram of total hours per day for each operating system
total_hours <- data %>%
gather(OperatingSystem, Hours, WindowsHours:MacHours) %>%
group_by(OperatingSystem) %>%
summarize(TotalHours = sum(Hours))
ggplot(total_hours, aes(x = OperatingSystem, y = TotalHours, fill = OperatingSystem)) +
geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Total hours per day for each operating system", x = "Operating System", y = "Total Hours") +
theme(legend.position = "none")
# Bar plot of preferred operating systems
preferred_os <- data %>%
group_by(PreferredOS) %>%
summarize(Count = n())
ggplot(preferred_os, aes(x = PreferredOS, y = Count, fill = PreferredOS)) +
geom_bar(stat = "identity", width = 0.7) +
theme_minimal() +
labs(title = "Preferred Operating System", x = "Operating System", y = "Count") +
theme(legend.position = "none")
# Boxplot of ComputersInUse per line
ggplot(data, aes(x = Line, y = ComputersInUse, fill = Line)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Computers in use per line", x = "Line", y = "Computers in use") +
theme(legend.position = "none")
#Dirichlet
data_normalized <- data %>%
mutate(TotalHours = WindowsHours + LinuxHours + MacHours) %>%
mutate(NormWindows = WindowsHours / TotalHours,
NormLinux = LinuxHours / TotalHours,
NormMac = MacHours / TotalHours)
alpha <- apply(data_normalized[, c("NormWindows", "NormLinux", "NormMac")], 2, mean) * 100
# Create a grid
grid_size <- 100
grid <- expand.grid(x = seq(0, 1, length.out = grid_size),
y = seq(0, 1, length.out = grid_size))
# Calculate the remaining probability for MacOS
grid$z <- 1 - grid$x - grid$y
# Remove invalid points
grid <- grid[grid$z >= 0, ]
# Calculate the probability density for the Dirichlet distribution
grid$probability <- apply(grid, 1, function(row) {
ddirichlet(x = as.numeric(row[1:3]), alpha = alpha)
})
ggplot(grid, aes(x = x, y = y, fill = probability)) +
geom_tile() +
scale_fill_viridis(option = "C", name = "Probability") +
coord_cartesian(xlim = c(0, 1), ylim = c(0, 1), expand = FALSE) +
labs(title = "Dirichlet Distribution of Time Allocation for Each OS",
x = "Windows", y = "Linux") +
theme_minimal()
# Installer og last inn nødvendige pakker
install.packages("tidyverse")
library(tidyverse)
# Les inn data fra csv-filen
data <- read_csv("data.csv")
# Gjør om tidspunktet til et datobjekt
data$Tidsmerke <- lubridate::ymd_hms(data$Tidsmerke)
# Lag en figur som viser fordelingen av operativsystemvalg
ggplot(data, aes(x=`Hvilket operativsystem foretrekker du?`)) +
geom_bar() +
xlab("Operativsystem") +
ylab("Antall respondenter") +
ggtitle("Fordeling av operativsystemvalg")
# Lag en figur som viser gjennomsnittlig brukstid for hvert operativsystem
data %>%
gather(key="OS", value="Tid", -Tidsmerke, -`Hvilken linje går du?`, -`Hvor mange datamaskiner har du i aktivt bruk? (Bærbar, Stasjonær, Server ...) `, -`Hvilket operativsystem foretrekker du?`) %>%
mutate(OS = ifelse(OS == "Windows", "Windows", ifelse(OS == "Linux", "Linux", "MacOS"))) %>%
ggplot(aes(x=OS, y=Tid, fill=OS)) +
geom_boxplot() +
xlab("Operativsystem") +
ylab("Tid (timer)") +
ggtitle("Gjennomsnittlig brukstid for hvert operativsystem")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
# Installer og last inn nødvendige pakker
install.packages("tidyverse")
library(tidyverse)
# Installer og last inn nødvendige pakker
#install.packages("tidyverse")
#library(tidyverse)
# Les inn data fra csv-filen
data <- read_csv("data.csv")
# Installer og last inn nødvendige pakker
#install.packages("tidyverse")
#library(tidyverse)
# Les inn data fra csv-filen
data <- read_csv("data.csv")
# Installer og last inn nødvendige pakker
#install.packages("tidyverse")
library(tidyverse)
# Installer og last inn nødvendige pakker
#install.packages("tidyverse")
library(tidyverse)
# Installer og last inn nødvendige pakker
install.packages("tidyverse")
library(tidyverse)
# Installer og last inn nødvendige pakker
install.packages("tidyverse")
library(tidyverse)
install.packages("dplyr")
install.packages("scatterplot3d")
install.packages("BayesFactor")
# Last inn nødvendige pakker
library(tidyverse)
# Last inn nødvendige pakker
library(tidyverse)
# Last inn nødvendige pakker
library(lubridate)
# Les inn data fra "data.csv"
data <- read_csv("data.csv", col_names = c("Tidsmerke", "Linje", "Windows", "Linux", "MacOS", "Foretrukket_OS", "Antall_maskiner"))
install.packages("ggplot2")
library(tidyr)
# Last inn nødvendige pakker
library(ggplot2)
library(tidyr)
# Les inn dataene
data <- read.csv(text = "
Tidsmerke,Hvilken_linje_går_du,Hvor_mange_timer_om_dagen_bruker_du_Windows,Hvor_mange_timer_om_dagen_bruker_du_Linux,Hvor_mange_timer_om_dagen_bruker_du_MacOS,Hvilket_operativsystem_foretrekker_du,Hvor_mange_datamaskiner_har_du_i_aktivt_bruk
2023/03/23 1:19:02 p.m. EET,Bygg,7,0,0,Windows,1
...
2023/04/20 12:46:57 p.m. EET,AI,8,2,0,Foretrekker ingen,2", header = TRUE, sep = ",")
# Konverter data til langt format for enklere plotting
data_long <- gather(data, key = "OS", value = "Timer", Hvor_mange_timer_om_dagen_bruker_du_Windows:Hvor_mange_timer_om_dagen_bruker_du_MacOS)
# Fjern "Hvor_mange_timer_om_dagen_bruker_du_" fra OS-kolonnen
data_long$OS <- gsub("Hvor_mange_timer_om_dagen_bruker_du_", "", data_long$OS)
# Visualiser timer brukt per operativsystem
ggplot(data_long, aes(x = OS, y = Timer, fill = OS)) +
geom_boxplot() +
labs(title = "Timer brukt per operativsystem",
x = "Operativsystem",
y = "Timer brukt per dag") +
theme_minimal()
# Visualiser antall datamaskiner i aktivt bruk
ggplot(data, aes(x = Hvor_mange_datamaskiner_har_du_i_aktivt_bruk, fill = Hvilket_operativsystem_foretrekker_du)) +
geom_bar() +
labs(title = "Antall datamaskiner i aktivt bruk",
x = "Antall datamaskiner",
y = "Antall svar") +
theme_minimal()
# Visualiser valg av linje og foretrukket operativsystem
ggplot(data, aes(x = Hvilken_linje_går_du, fill = Hvilket_operativsystem_foretrekker_du)) +
geom_bar(position = "dodge") +
labs(title = "Valg av linje og foretrukket operativsystem",
x = "Linje",
y = "Antall svar") +
theme_minimal()
ggplot(data_long, aes(x = OS, y = Timer, fill = OS)) +
geom_boxplot() +
labs(title = "Timer brukt per operativsystem",
x = "Operativsystem",
y = "Timer brukt per dag") +
theme_minimal()
ggplot(data, aes(x = Hvor_mange_datamaskiner_har_du_i_aktivt_bruk, fill = Hvilket_operativsystem_foretrekker_du)) +
geom_bar() +
labs(title = "Antall datamaskiner i aktivt bruk",
x = "Antall datamaskiner",
y = "Antall svar") +
theme_minimal()
data <- read.csv("data.csv", header = TRUE)
library(ggplot2)
ggplot(data, aes(x = `Hvor mange timer om dagen bruker du Windows. Svar bare med nummer`)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
labs(x = "Antall timer brukt på Windows per dag", y = "Antall personer") +
theme_classic()
data <- read.csv("data.csv", header = TRUE)
library(ggplot2)
ggplot(data, aes(x = `Hvor mange timer om dagen bruker du Windows. Svar bare med nummer`)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
labs(x = "Antall timer brukt på Windows per dag", y = "Antall personer") +
theme_classic()
data <- read.csv("data.csv", header = TRUE)
library(ggplot2)
ggplot(data, aes(x=`Hvilket operativsystem foretrekker du?`)) +
geom_histogram(color="black", fill="blue", bins=5) +
labs(title="Fordeling av operativsystemforetrekkelse", x="Operativsystem", y="Antall personer")
data <- read.csv("data.csv")
library(ggplot2)
ggplot(data, aes(x=`Hvilket operativsystem foretrekker du?`)) +
geom_histogram(color="black", fill="blue", bins=5) +
labs(title="Fordeling av operativsystemforetrekkelse", x="Operativsystem", y="Antall personer")
